import * as _104 from "./abci/types";
import * as _105 from "./crypto/keys";
import * as _106 from "./crypto/proof";
import * as _107 from "./libs/bits/types";
import * as _108 from "./p2p/types";
import * as _109 from "./types/block";
import * as _110 from "./types/evidence";
import * as _111 from "./types/params";
import * as _112 from "./types/types";
import * as _113 from "./types/validator";
import * as _114 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _104.CheckTxType;
        checkTxTypeToJSON(object: _104.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _104.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _104.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _104.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _104.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _104.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _104.ResponseProcessProposal_ProposalStatus): string;
        misbehaviorTypeFromJSON(object: any): _104.MisbehaviorType;
        misbehaviorTypeToJSON(object: _104.MisbehaviorType): string;
        CheckTxType: typeof _104.CheckTxType;
        CheckTxTypeSDKType: typeof _104.CheckTxType;
        CheckTxTypeAmino: typeof _104.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _104.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _104.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _104.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _104.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _104.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _104.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _104.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _104.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _104.ResponseProcessProposal_ProposalStatus;
        MisbehaviorType: typeof _104.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _104.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _104.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _104.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Request;
            fromPartial(object: Partial<_104.Request>): _104.Request;
            fromAmino(object: _104.RequestAmino): _104.Request;
            toAmino(message: _104.Request): _104.RequestAmino;
            fromAminoMsg(object: _104.RequestAminoMsg): _104.Request;
            fromProtoMsg(message: _104.RequestProtoMsg): _104.Request;
            toProto(message: _104.Request): Uint8Array;
            toProtoMsg(message: _104.Request): _104.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _104.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestEcho;
            fromPartial(object: Partial<_104.RequestEcho>): _104.RequestEcho;
            fromAmino(object: _104.RequestEchoAmino): _104.RequestEcho;
            toAmino(message: _104.RequestEcho): _104.RequestEchoAmino;
            fromAminoMsg(object: _104.RequestEchoAminoMsg): _104.RequestEcho;
            fromProtoMsg(message: _104.RequestEchoProtoMsg): _104.RequestEcho;
            toProto(message: _104.RequestEcho): Uint8Array;
            toProtoMsg(message: _104.RequestEcho): _104.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _104.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestFlush;
            fromPartial(_: Partial<_104.RequestFlush>): _104.RequestFlush;
            fromAmino(_: _104.RequestFlushAmino): _104.RequestFlush;
            toAmino(_: _104.RequestFlush): _104.RequestFlushAmino;
            fromAminoMsg(object: _104.RequestFlushAminoMsg): _104.RequestFlush;
            fromProtoMsg(message: _104.RequestFlushProtoMsg): _104.RequestFlush;
            toProto(message: _104.RequestFlush): Uint8Array;
            toProtoMsg(message: _104.RequestFlush): _104.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _104.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestInfo;
            fromPartial(object: Partial<_104.RequestInfo>): _104.RequestInfo;
            fromAmino(object: _104.RequestInfoAmino): _104.RequestInfo;
            toAmino(message: _104.RequestInfo): _104.RequestInfoAmino;
            fromAminoMsg(object: _104.RequestInfoAminoMsg): _104.RequestInfo;
            fromProtoMsg(message: _104.RequestInfoProtoMsg): _104.RequestInfo;
            toProto(message: _104.RequestInfo): Uint8Array;
            toProtoMsg(message: _104.RequestInfo): _104.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _104.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestInitChain;
            fromPartial(object: Partial<_104.RequestInitChain>): _104.RequestInitChain;
            fromAmino(object: _104.RequestInitChainAmino): _104.RequestInitChain;
            toAmino(message: _104.RequestInitChain): _104.RequestInitChainAmino;
            fromAminoMsg(object: _104.RequestInitChainAminoMsg): _104.RequestInitChain;
            fromProtoMsg(message: _104.RequestInitChainProtoMsg): _104.RequestInitChain;
            toProto(message: _104.RequestInitChain): Uint8Array;
            toProtoMsg(message: _104.RequestInitChain): _104.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _104.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestQuery;
            fromPartial(object: Partial<_104.RequestQuery>): _104.RequestQuery;
            fromAmino(object: _104.RequestQueryAmino): _104.RequestQuery;
            toAmino(message: _104.RequestQuery): _104.RequestQueryAmino;
            fromAminoMsg(object: _104.RequestQueryAminoMsg): _104.RequestQuery;
            fromProtoMsg(message: _104.RequestQueryProtoMsg): _104.RequestQuery;
            toProto(message: _104.RequestQuery): Uint8Array;
            toProtoMsg(message: _104.RequestQuery): _104.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _104.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestBeginBlock;
            fromPartial(object: Partial<_104.RequestBeginBlock>): _104.RequestBeginBlock;
            fromAmino(object: _104.RequestBeginBlockAmino): _104.RequestBeginBlock;
            toAmino(message: _104.RequestBeginBlock): _104.RequestBeginBlockAmino;
            fromAminoMsg(object: _104.RequestBeginBlockAminoMsg): _104.RequestBeginBlock;
            fromProtoMsg(message: _104.RequestBeginBlockProtoMsg): _104.RequestBeginBlock;
            toProto(message: _104.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _104.RequestBeginBlock): _104.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _104.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestCheckTx;
            fromPartial(object: Partial<_104.RequestCheckTx>): _104.RequestCheckTx;
            fromAmino(object: _104.RequestCheckTxAmino): _104.RequestCheckTx;
            toAmino(message: _104.RequestCheckTx): _104.RequestCheckTxAmino;
            fromAminoMsg(object: _104.RequestCheckTxAminoMsg): _104.RequestCheckTx;
            fromProtoMsg(message: _104.RequestCheckTxProtoMsg): _104.RequestCheckTx;
            toProto(message: _104.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _104.RequestCheckTx): _104.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _104.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestDeliverTx;
            fromPartial(object: Partial<_104.RequestDeliverTx>): _104.RequestDeliverTx;
            fromAmino(object: _104.RequestDeliverTxAmino): _104.RequestDeliverTx;
            toAmino(message: _104.RequestDeliverTx): _104.RequestDeliverTxAmino;
            fromAminoMsg(object: _104.RequestDeliverTxAminoMsg): _104.RequestDeliverTx;
            fromProtoMsg(message: _104.RequestDeliverTxProtoMsg): _104.RequestDeliverTx;
            toProto(message: _104.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _104.RequestDeliverTx): _104.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _104.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestEndBlock;
            fromPartial(object: Partial<_104.RequestEndBlock>): _104.RequestEndBlock;
            fromAmino(object: _104.RequestEndBlockAmino): _104.RequestEndBlock;
            toAmino(message: _104.RequestEndBlock): _104.RequestEndBlockAmino;
            fromAminoMsg(object: _104.RequestEndBlockAminoMsg): _104.RequestEndBlock;
            fromProtoMsg(message: _104.RequestEndBlockProtoMsg): _104.RequestEndBlock;
            toProto(message: _104.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _104.RequestEndBlock): _104.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _104.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestCommit;
            fromPartial(_: Partial<_104.RequestCommit>): _104.RequestCommit;
            fromAmino(_: _104.RequestCommitAmino): _104.RequestCommit;
            toAmino(_: _104.RequestCommit): _104.RequestCommitAmino;
            fromAminoMsg(object: _104.RequestCommitAminoMsg): _104.RequestCommit;
            fromProtoMsg(message: _104.RequestCommitProtoMsg): _104.RequestCommit;
            toProto(message: _104.RequestCommit): Uint8Array;
            toProtoMsg(message: _104.RequestCommit): _104.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _104.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestListSnapshots;
            fromPartial(_: Partial<_104.RequestListSnapshots>): _104.RequestListSnapshots;
            fromAmino(_: _104.RequestListSnapshotsAmino): _104.RequestListSnapshots;
            toAmino(_: _104.RequestListSnapshots): _104.RequestListSnapshotsAmino;
            fromAminoMsg(object: _104.RequestListSnapshotsAminoMsg): _104.RequestListSnapshots;
            fromProtoMsg(message: _104.RequestListSnapshotsProtoMsg): _104.RequestListSnapshots;
            toProto(message: _104.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _104.RequestListSnapshots): _104.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _104.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestOfferSnapshot;
            fromPartial(object: Partial<_104.RequestOfferSnapshot>): _104.RequestOfferSnapshot;
            fromAmino(object: _104.RequestOfferSnapshotAmino): _104.RequestOfferSnapshot;
            toAmino(message: _104.RequestOfferSnapshot): _104.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _104.RequestOfferSnapshotAminoMsg): _104.RequestOfferSnapshot;
            fromProtoMsg(message: _104.RequestOfferSnapshotProtoMsg): _104.RequestOfferSnapshot;
            toProto(message: _104.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _104.RequestOfferSnapshot): _104.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _104.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_104.RequestLoadSnapshotChunk>): _104.RequestLoadSnapshotChunk;
            fromAmino(object: _104.RequestLoadSnapshotChunkAmino): _104.RequestLoadSnapshotChunk;
            toAmino(message: _104.RequestLoadSnapshotChunk): _104.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _104.RequestLoadSnapshotChunkAminoMsg): _104.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _104.RequestLoadSnapshotChunkProtoMsg): _104.RequestLoadSnapshotChunk;
            toProto(message: _104.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _104.RequestLoadSnapshotChunk): _104.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _104.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_104.RequestApplySnapshotChunk>): _104.RequestApplySnapshotChunk;
            fromAmino(object: _104.RequestApplySnapshotChunkAmino): _104.RequestApplySnapshotChunk;
            toAmino(message: _104.RequestApplySnapshotChunk): _104.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _104.RequestApplySnapshotChunkAminoMsg): _104.RequestApplySnapshotChunk;
            fromProtoMsg(message: _104.RequestApplySnapshotChunkProtoMsg): _104.RequestApplySnapshotChunk;
            toProto(message: _104.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _104.RequestApplySnapshotChunk): _104.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _104.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestPrepareProposal;
            fromPartial(object: Partial<_104.RequestPrepareProposal>): _104.RequestPrepareProposal;
            fromAmino(object: _104.RequestPrepareProposalAmino): _104.RequestPrepareProposal;
            toAmino(message: _104.RequestPrepareProposal): _104.RequestPrepareProposalAmino;
            fromAminoMsg(object: _104.RequestPrepareProposalAminoMsg): _104.RequestPrepareProposal;
            fromProtoMsg(message: _104.RequestPrepareProposalProtoMsg): _104.RequestPrepareProposal;
            toProto(message: _104.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _104.RequestPrepareProposal): _104.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _104.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.RequestProcessProposal;
            fromPartial(object: Partial<_104.RequestProcessProposal>): _104.RequestProcessProposal;
            fromAmino(object: _104.RequestProcessProposalAmino): _104.RequestProcessProposal;
            toAmino(message: _104.RequestProcessProposal): _104.RequestProcessProposalAmino;
            fromAminoMsg(object: _104.RequestProcessProposalAminoMsg): _104.RequestProcessProposal;
            fromProtoMsg(message: _104.RequestProcessProposalProtoMsg): _104.RequestProcessProposal;
            toProto(message: _104.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _104.RequestProcessProposal): _104.RequestProcessProposalProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _104.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Response;
            fromPartial(object: Partial<_104.Response>): _104.Response;
            fromAmino(object: _104.ResponseAmino): _104.Response;
            toAmino(message: _104.Response): _104.ResponseAmino;
            fromAminoMsg(object: _104.ResponseAminoMsg): _104.Response;
            fromProtoMsg(message: _104.ResponseProtoMsg): _104.Response;
            toProto(message: _104.Response): Uint8Array;
            toProtoMsg(message: _104.Response): _104.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _104.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseException;
            fromPartial(object: Partial<_104.ResponseException>): _104.ResponseException;
            fromAmino(object: _104.ResponseExceptionAmino): _104.ResponseException;
            toAmino(message: _104.ResponseException): _104.ResponseExceptionAmino;
            fromAminoMsg(object: _104.ResponseExceptionAminoMsg): _104.ResponseException;
            fromProtoMsg(message: _104.ResponseExceptionProtoMsg): _104.ResponseException;
            toProto(message: _104.ResponseException): Uint8Array;
            toProtoMsg(message: _104.ResponseException): _104.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _104.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseEcho;
            fromPartial(object: Partial<_104.ResponseEcho>): _104.ResponseEcho;
            fromAmino(object: _104.ResponseEchoAmino): _104.ResponseEcho;
            toAmino(message: _104.ResponseEcho): _104.ResponseEchoAmino;
            fromAminoMsg(object: _104.ResponseEchoAminoMsg): _104.ResponseEcho;
            fromProtoMsg(message: _104.ResponseEchoProtoMsg): _104.ResponseEcho;
            toProto(message: _104.ResponseEcho): Uint8Array;
            toProtoMsg(message: _104.ResponseEcho): _104.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _104.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseFlush;
            fromPartial(_: Partial<_104.ResponseFlush>): _104.ResponseFlush;
            fromAmino(_: _104.ResponseFlushAmino): _104.ResponseFlush;
            toAmino(_: _104.ResponseFlush): _104.ResponseFlushAmino;
            fromAminoMsg(object: _104.ResponseFlushAminoMsg): _104.ResponseFlush;
            fromProtoMsg(message: _104.ResponseFlushProtoMsg): _104.ResponseFlush;
            toProto(message: _104.ResponseFlush): Uint8Array;
            toProtoMsg(message: _104.ResponseFlush): _104.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _104.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseInfo;
            fromPartial(object: Partial<_104.ResponseInfo>): _104.ResponseInfo;
            fromAmino(object: _104.ResponseInfoAmino): _104.ResponseInfo;
            toAmino(message: _104.ResponseInfo): _104.ResponseInfoAmino;
            fromAminoMsg(object: _104.ResponseInfoAminoMsg): _104.ResponseInfo;
            fromProtoMsg(message: _104.ResponseInfoProtoMsg): _104.ResponseInfo;
            toProto(message: _104.ResponseInfo): Uint8Array;
            toProtoMsg(message: _104.ResponseInfo): _104.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _104.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseInitChain;
            fromPartial(object: Partial<_104.ResponseInitChain>): _104.ResponseInitChain;
            fromAmino(object: _104.ResponseInitChainAmino): _104.ResponseInitChain;
            toAmino(message: _104.ResponseInitChain): _104.ResponseInitChainAmino;
            fromAminoMsg(object: _104.ResponseInitChainAminoMsg): _104.ResponseInitChain;
            fromProtoMsg(message: _104.ResponseInitChainProtoMsg): _104.ResponseInitChain;
            toProto(message: _104.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _104.ResponseInitChain): _104.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _104.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseQuery;
            fromPartial(object: Partial<_104.ResponseQuery>): _104.ResponseQuery;
            fromAmino(object: _104.ResponseQueryAmino): _104.ResponseQuery;
            toAmino(message: _104.ResponseQuery): _104.ResponseQueryAmino;
            fromAminoMsg(object: _104.ResponseQueryAminoMsg): _104.ResponseQuery;
            fromProtoMsg(message: _104.ResponseQueryProtoMsg): _104.ResponseQuery;
            toProto(message: _104.ResponseQuery): Uint8Array;
            toProtoMsg(message: _104.ResponseQuery): _104.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _104.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseBeginBlock;
            fromPartial(object: Partial<_104.ResponseBeginBlock>): _104.ResponseBeginBlock;
            fromAmino(object: _104.ResponseBeginBlockAmino): _104.ResponseBeginBlock;
            toAmino(message: _104.ResponseBeginBlock): _104.ResponseBeginBlockAmino;
            fromAminoMsg(object: _104.ResponseBeginBlockAminoMsg): _104.ResponseBeginBlock;
            fromProtoMsg(message: _104.ResponseBeginBlockProtoMsg): _104.ResponseBeginBlock;
            toProto(message: _104.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _104.ResponseBeginBlock): _104.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _104.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseCheckTx;
            fromPartial(object: Partial<_104.ResponseCheckTx>): _104.ResponseCheckTx;
            fromAmino(object: _104.ResponseCheckTxAmino): _104.ResponseCheckTx;
            toAmino(message: _104.ResponseCheckTx): _104.ResponseCheckTxAmino;
            fromAminoMsg(object: _104.ResponseCheckTxAminoMsg): _104.ResponseCheckTx;
            fromProtoMsg(message: _104.ResponseCheckTxProtoMsg): _104.ResponseCheckTx;
            toProto(message: _104.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _104.ResponseCheckTx): _104.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _104.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseDeliverTx;
            fromPartial(object: Partial<_104.ResponseDeliverTx>): _104.ResponseDeliverTx;
            fromAmino(object: _104.ResponseDeliverTxAmino): _104.ResponseDeliverTx;
            toAmino(message: _104.ResponseDeliverTx): _104.ResponseDeliverTxAmino;
            fromAminoMsg(object: _104.ResponseDeliverTxAminoMsg): _104.ResponseDeliverTx;
            fromProtoMsg(message: _104.ResponseDeliverTxProtoMsg): _104.ResponseDeliverTx;
            toProto(message: _104.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _104.ResponseDeliverTx): _104.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _104.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseEndBlock;
            fromPartial(object: Partial<_104.ResponseEndBlock>): _104.ResponseEndBlock;
            fromAmino(object: _104.ResponseEndBlockAmino): _104.ResponseEndBlock;
            toAmino(message: _104.ResponseEndBlock): _104.ResponseEndBlockAmino;
            fromAminoMsg(object: _104.ResponseEndBlockAminoMsg): _104.ResponseEndBlock;
            fromProtoMsg(message: _104.ResponseEndBlockProtoMsg): _104.ResponseEndBlock;
            toProto(message: _104.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _104.ResponseEndBlock): _104.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _104.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseCommit;
            fromPartial(object: Partial<_104.ResponseCommit>): _104.ResponseCommit;
            fromAmino(object: _104.ResponseCommitAmino): _104.ResponseCommit;
            toAmino(message: _104.ResponseCommit): _104.ResponseCommitAmino;
            fromAminoMsg(object: _104.ResponseCommitAminoMsg): _104.ResponseCommit;
            fromProtoMsg(message: _104.ResponseCommitProtoMsg): _104.ResponseCommit;
            toProto(message: _104.ResponseCommit): Uint8Array;
            toProtoMsg(message: _104.ResponseCommit): _104.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _104.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseListSnapshots;
            fromPartial(object: Partial<_104.ResponseListSnapshots>): _104.ResponseListSnapshots;
            fromAmino(object: _104.ResponseListSnapshotsAmino): _104.ResponseListSnapshots;
            toAmino(message: _104.ResponseListSnapshots): _104.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _104.ResponseListSnapshotsAminoMsg): _104.ResponseListSnapshots;
            fromProtoMsg(message: _104.ResponseListSnapshotsProtoMsg): _104.ResponseListSnapshots;
            toProto(message: _104.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _104.ResponseListSnapshots): _104.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _104.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseOfferSnapshot;
            fromPartial(object: Partial<_104.ResponseOfferSnapshot>): _104.ResponseOfferSnapshot;
            fromAmino(object: _104.ResponseOfferSnapshotAmino): _104.ResponseOfferSnapshot;
            toAmino(message: _104.ResponseOfferSnapshot): _104.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _104.ResponseOfferSnapshotAminoMsg): _104.ResponseOfferSnapshot;
            fromProtoMsg(message: _104.ResponseOfferSnapshotProtoMsg): _104.ResponseOfferSnapshot;
            toProto(message: _104.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _104.ResponseOfferSnapshot): _104.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _104.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_104.ResponseLoadSnapshotChunk>): _104.ResponseLoadSnapshotChunk;
            fromAmino(object: _104.ResponseLoadSnapshotChunkAmino): _104.ResponseLoadSnapshotChunk;
            toAmino(message: _104.ResponseLoadSnapshotChunk): _104.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _104.ResponseLoadSnapshotChunkAminoMsg): _104.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _104.ResponseLoadSnapshotChunkProtoMsg): _104.ResponseLoadSnapshotChunk;
            toProto(message: _104.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _104.ResponseLoadSnapshotChunk): _104.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _104.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_104.ResponseApplySnapshotChunk>): _104.ResponseApplySnapshotChunk;
            fromAmino(object: _104.ResponseApplySnapshotChunkAmino): _104.ResponseApplySnapshotChunk;
            toAmino(message: _104.ResponseApplySnapshotChunk): _104.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _104.ResponseApplySnapshotChunkAminoMsg): _104.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _104.ResponseApplySnapshotChunkProtoMsg): _104.ResponseApplySnapshotChunk;
            toProto(message: _104.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _104.ResponseApplySnapshotChunk): _104.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _104.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponsePrepareProposal;
            fromPartial(object: Partial<_104.ResponsePrepareProposal>): _104.ResponsePrepareProposal;
            fromAmino(object: _104.ResponsePrepareProposalAmino): _104.ResponsePrepareProposal;
            toAmino(message: _104.ResponsePrepareProposal): _104.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _104.ResponsePrepareProposalAminoMsg): _104.ResponsePrepareProposal;
            fromProtoMsg(message: _104.ResponsePrepareProposalProtoMsg): _104.ResponsePrepareProposal;
            toProto(message: _104.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _104.ResponsePrepareProposal): _104.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _104.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ResponseProcessProposal;
            fromPartial(object: Partial<_104.ResponseProcessProposal>): _104.ResponseProcessProposal;
            fromAmino(object: _104.ResponseProcessProposalAmino): _104.ResponseProcessProposal;
            toAmino(message: _104.ResponseProcessProposal): _104.ResponseProcessProposalAmino;
            fromAminoMsg(object: _104.ResponseProcessProposalAminoMsg): _104.ResponseProcessProposal;
            fromProtoMsg(message: _104.ResponseProcessProposalProtoMsg): _104.ResponseProcessProposal;
            toProto(message: _104.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _104.ResponseProcessProposal): _104.ResponseProcessProposalProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _104.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.CommitInfo;
            fromPartial(object: Partial<_104.CommitInfo>): _104.CommitInfo;
            fromAmino(object: _104.CommitInfoAmino): _104.CommitInfo;
            toAmino(message: _104.CommitInfo): _104.CommitInfoAmino;
            fromAminoMsg(object: _104.CommitInfoAminoMsg): _104.CommitInfo;
            fromProtoMsg(message: _104.CommitInfoProtoMsg): _104.CommitInfo;
            toProto(message: _104.CommitInfo): Uint8Array;
            toProtoMsg(message: _104.CommitInfo): _104.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _104.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ExtendedCommitInfo;
            fromPartial(object: Partial<_104.ExtendedCommitInfo>): _104.ExtendedCommitInfo;
            fromAmino(object: _104.ExtendedCommitInfoAmino): _104.ExtendedCommitInfo;
            toAmino(message: _104.ExtendedCommitInfo): _104.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _104.ExtendedCommitInfoAminoMsg): _104.ExtendedCommitInfo;
            fromProtoMsg(message: _104.ExtendedCommitInfoProtoMsg): _104.ExtendedCommitInfo;
            toProto(message: _104.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _104.ExtendedCommitInfo): _104.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _104.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Event;
            fromPartial(object: Partial<_104.Event>): _104.Event;
            fromAmino(object: _104.EventAmino): _104.Event;
            toAmino(message: _104.Event): _104.EventAmino;
            fromAminoMsg(object: _104.EventAminoMsg): _104.Event;
            fromProtoMsg(message: _104.EventProtoMsg): _104.Event;
            toProto(message: _104.Event): Uint8Array;
            toProtoMsg(message: _104.Event): _104.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _104.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.EventAttribute;
            fromPartial(object: Partial<_104.EventAttribute>): _104.EventAttribute;
            fromAmino(object: _104.EventAttributeAmino): _104.EventAttribute;
            toAmino(message: _104.EventAttribute): _104.EventAttributeAmino;
            fromAminoMsg(object: _104.EventAttributeAminoMsg): _104.EventAttribute;
            fromProtoMsg(message: _104.EventAttributeProtoMsg): _104.EventAttribute;
            toProto(message: _104.EventAttribute): Uint8Array;
            toProtoMsg(message: _104.EventAttribute): _104.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _104.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.TxResult;
            fromPartial(object: Partial<_104.TxResult>): _104.TxResult;
            fromAmino(object: _104.TxResultAmino): _104.TxResult;
            toAmino(message: _104.TxResult): _104.TxResultAmino;
            fromAminoMsg(object: _104.TxResultAminoMsg): _104.TxResult;
            fromProtoMsg(message: _104.TxResultProtoMsg): _104.TxResult;
            toProto(message: _104.TxResult): Uint8Array;
            toProtoMsg(message: _104.TxResult): _104.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _104.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Validator;
            fromPartial(object: Partial<_104.Validator>): _104.Validator;
            fromAmino(object: _104.ValidatorAmino): _104.Validator;
            toAmino(message: _104.Validator): _104.ValidatorAmino;
            fromAminoMsg(object: _104.ValidatorAminoMsg): _104.Validator;
            fromProtoMsg(message: _104.ValidatorProtoMsg): _104.Validator;
            toProto(message: _104.Validator): Uint8Array;
            toProtoMsg(message: _104.Validator): _104.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _104.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ValidatorUpdate;
            fromPartial(object: Partial<_104.ValidatorUpdate>): _104.ValidatorUpdate;
            fromAmino(object: _104.ValidatorUpdateAmino): _104.ValidatorUpdate;
            toAmino(message: _104.ValidatorUpdate): _104.ValidatorUpdateAmino;
            fromAminoMsg(object: _104.ValidatorUpdateAminoMsg): _104.ValidatorUpdate;
            fromProtoMsg(message: _104.ValidatorUpdateProtoMsg): _104.ValidatorUpdate;
            toProto(message: _104.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _104.ValidatorUpdate): _104.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _104.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.VoteInfo;
            fromPartial(object: Partial<_104.VoteInfo>): _104.VoteInfo;
            fromAmino(object: _104.VoteInfoAmino): _104.VoteInfo;
            toAmino(message: _104.VoteInfo): _104.VoteInfoAmino;
            fromAminoMsg(object: _104.VoteInfoAminoMsg): _104.VoteInfo;
            fromProtoMsg(message: _104.VoteInfoProtoMsg): _104.VoteInfo;
            toProto(message: _104.VoteInfo): Uint8Array;
            toProtoMsg(message: _104.VoteInfo): _104.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _104.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ExtendedVoteInfo;
            fromPartial(object: Partial<_104.ExtendedVoteInfo>): _104.ExtendedVoteInfo;
            fromAmino(object: _104.ExtendedVoteInfoAmino): _104.ExtendedVoteInfo;
            toAmino(message: _104.ExtendedVoteInfo): _104.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _104.ExtendedVoteInfoAminoMsg): _104.ExtendedVoteInfo;
            fromProtoMsg(message: _104.ExtendedVoteInfoProtoMsg): _104.ExtendedVoteInfo;
            toProto(message: _104.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _104.ExtendedVoteInfo): _104.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _104.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Misbehavior;
            fromPartial(object: Partial<_104.Misbehavior>): _104.Misbehavior;
            fromAmino(object: _104.MisbehaviorAmino): _104.Misbehavior;
            toAmino(message: _104.Misbehavior): _104.MisbehaviorAmino;
            fromAminoMsg(object: _104.MisbehaviorAminoMsg): _104.Misbehavior;
            fromProtoMsg(message: _104.MisbehaviorProtoMsg): _104.Misbehavior;
            toProto(message: _104.Misbehavior): Uint8Array;
            toProtoMsg(message: _104.Misbehavior): _104.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _104.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Snapshot;
            fromPartial(object: Partial<_104.Snapshot>): _104.Snapshot;
            fromAmino(object: _104.SnapshotAmino): _104.Snapshot;
            toAmino(message: _104.Snapshot): _104.SnapshotAmino;
            fromAminoMsg(object: _104.SnapshotAminoMsg): _104.Snapshot;
            fromProtoMsg(message: _104.SnapshotProtoMsg): _104.Snapshot;
            toProto(message: _104.Snapshot): Uint8Array;
            toProtoMsg(message: _104.Snapshot): _104.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _106.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.Proof;
            fromPartial(object: Partial<_106.Proof>): _106.Proof;
            fromAmino(object: _106.ProofAmino): _106.Proof;
            toAmino(message: _106.Proof): _106.ProofAmino;
            fromAminoMsg(object: _106.ProofAminoMsg): _106.Proof;
            fromProtoMsg(message: _106.ProofProtoMsg): _106.Proof;
            toProto(message: _106.Proof): Uint8Array;
            toProtoMsg(message: _106.Proof): _106.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _106.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.ValueOp;
            fromPartial(object: Partial<_106.ValueOp>): _106.ValueOp;
            fromAmino(object: _106.ValueOpAmino): _106.ValueOp;
            toAmino(message: _106.ValueOp): _106.ValueOpAmino;
            fromAminoMsg(object: _106.ValueOpAminoMsg): _106.ValueOp;
            fromProtoMsg(message: _106.ValueOpProtoMsg): _106.ValueOp;
            toProto(message: _106.ValueOp): Uint8Array;
            toProtoMsg(message: _106.ValueOp): _106.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _106.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.DominoOp;
            fromPartial(object: Partial<_106.DominoOp>): _106.DominoOp;
            fromAmino(object: _106.DominoOpAmino): _106.DominoOp;
            toAmino(message: _106.DominoOp): _106.DominoOpAmino;
            fromAminoMsg(object: _106.DominoOpAminoMsg): _106.DominoOp;
            fromProtoMsg(message: _106.DominoOpProtoMsg): _106.DominoOp;
            toProto(message: _106.DominoOp): Uint8Array;
            toProtoMsg(message: _106.DominoOp): _106.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _106.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.ProofOp;
            fromPartial(object: Partial<_106.ProofOp>): _106.ProofOp;
            fromAmino(object: _106.ProofOpAmino): _106.ProofOp;
            toAmino(message: _106.ProofOp): _106.ProofOpAmino;
            fromAminoMsg(object: _106.ProofOpAminoMsg): _106.ProofOp;
            fromProtoMsg(message: _106.ProofOpProtoMsg): _106.ProofOp;
            toProto(message: _106.ProofOp): Uint8Array;
            toProtoMsg(message: _106.ProofOp): _106.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _106.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.ProofOps;
            fromPartial(object: Partial<_106.ProofOps>): _106.ProofOps;
            fromAmino(object: _106.ProofOpsAmino): _106.ProofOps;
            toAmino(message: _106.ProofOps): _106.ProofOpsAmino;
            fromAminoMsg(object: _106.ProofOpsAminoMsg): _106.ProofOps;
            fromProtoMsg(message: _106.ProofOpsProtoMsg): _106.ProofOps;
            toProto(message: _106.ProofOps): Uint8Array;
            toProtoMsg(message: _106.ProofOps): _106.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _105.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.PublicKey;
            fromPartial(object: Partial<_105.PublicKey>): _105.PublicKey;
            fromAmino(object: _105.PublicKeyAmino): _105.PublicKey;
            toAmino(message: _105.PublicKey): _105.PublicKeyAmino;
            fromAminoMsg(object: _105.PublicKeyAminoMsg): _105.PublicKey;
            fromProtoMsg(message: _105.PublicKeyProtoMsg): _105.PublicKey;
            toProto(message: _105.PublicKey): Uint8Array;
            toProtoMsg(message: _105.PublicKey): _105.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _107.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.BitArray;
                fromPartial(object: Partial<_107.BitArray>): _107.BitArray;
                fromAmino(object: _107.BitArrayAmino): _107.BitArray;
                toAmino(message: _107.BitArray): _107.BitArrayAmino;
                fromAminoMsg(object: _107.BitArrayAminoMsg): _107.BitArray;
                fromProtoMsg(message: _107.BitArrayProtoMsg): _107.BitArray;
                toProto(message: _107.BitArray): Uint8Array;
                toProtoMsg(message: _107.BitArray): _107.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _108.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.NetAddress;
            fromPartial(object: Partial<_108.NetAddress>): _108.NetAddress;
            fromAmino(object: _108.NetAddressAmino): _108.NetAddress;
            toAmino(message: _108.NetAddress): _108.NetAddressAmino;
            fromAminoMsg(object: _108.NetAddressAminoMsg): _108.NetAddress;
            fromProtoMsg(message: _108.NetAddressProtoMsg): _108.NetAddress;
            toProto(message: _108.NetAddress): Uint8Array;
            toProtoMsg(message: _108.NetAddress): _108.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _108.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.ProtocolVersion;
            fromPartial(object: Partial<_108.ProtocolVersion>): _108.ProtocolVersion;
            fromAmino(object: _108.ProtocolVersionAmino): _108.ProtocolVersion;
            toAmino(message: _108.ProtocolVersion): _108.ProtocolVersionAmino;
            fromAminoMsg(object: _108.ProtocolVersionAminoMsg): _108.ProtocolVersion;
            fromProtoMsg(message: _108.ProtocolVersionProtoMsg): _108.ProtocolVersion;
            toProto(message: _108.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _108.ProtocolVersion): _108.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _108.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.DefaultNodeInfo;
            fromPartial(object: Partial<_108.DefaultNodeInfo>): _108.DefaultNodeInfo;
            fromAmino(object: _108.DefaultNodeInfoAmino): _108.DefaultNodeInfo;
            toAmino(message: _108.DefaultNodeInfo): _108.DefaultNodeInfoAmino;
            fromAminoMsg(object: _108.DefaultNodeInfoAminoMsg): _108.DefaultNodeInfo;
            fromProtoMsg(message: _108.DefaultNodeInfoProtoMsg): _108.DefaultNodeInfo;
            toProto(message: _108.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _108.DefaultNodeInfo): _108.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _108.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.DefaultNodeInfoOther;
            fromPartial(object: Partial<_108.DefaultNodeInfoOther>): _108.DefaultNodeInfoOther;
            fromAmino(object: _108.DefaultNodeInfoOtherAmino): _108.DefaultNodeInfoOther;
            toAmino(message: _108.DefaultNodeInfoOther): _108.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _108.DefaultNodeInfoOtherAminoMsg): _108.DefaultNodeInfoOther;
            fromProtoMsg(message: _108.DefaultNodeInfoOtherProtoMsg): _108.DefaultNodeInfoOther;
            toProto(message: _108.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _108.DefaultNodeInfoOther): _108.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _113.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.ValidatorSet;
            fromPartial(object: Partial<_113.ValidatorSet>): _113.ValidatorSet;
            fromAmino(object: _113.ValidatorSetAmino): _113.ValidatorSet;
            toAmino(message: _113.ValidatorSet): _113.ValidatorSetAmino;
            fromAminoMsg(object: _113.ValidatorSetAminoMsg): _113.ValidatorSet;
            fromProtoMsg(message: _113.ValidatorSetProtoMsg): _113.ValidatorSet;
            toProto(message: _113.ValidatorSet): Uint8Array;
            toProtoMsg(message: _113.ValidatorSet): _113.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _113.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.Validator;
            fromPartial(object: Partial<_113.Validator>): _113.Validator;
            fromAmino(object: _113.ValidatorAmino): _113.Validator;
            toAmino(message: _113.Validator): _113.ValidatorAmino;
            fromAminoMsg(object: _113.ValidatorAminoMsg): _113.Validator;
            fromProtoMsg(message: _113.ValidatorProtoMsg): _113.Validator;
            toProto(message: _113.Validator): Uint8Array;
            toProtoMsg(message: _113.Validator): _113.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _113.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.SimpleValidator;
            fromPartial(object: Partial<_113.SimpleValidator>): _113.SimpleValidator;
            fromAmino(object: _113.SimpleValidatorAmino): _113.SimpleValidator;
            toAmino(message: _113.SimpleValidator): _113.SimpleValidatorAmino;
            fromAminoMsg(object: _113.SimpleValidatorAminoMsg): _113.SimpleValidator;
            fromProtoMsg(message: _113.SimpleValidatorProtoMsg): _113.SimpleValidator;
            toProto(message: _113.SimpleValidator): Uint8Array;
            toProtoMsg(message: _113.SimpleValidator): _113.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _112.BlockIDFlag;
        blockIDFlagToJSON(object: _112.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _112.SignedMsgType;
        signedMsgTypeToJSON(object: _112.SignedMsgType): string;
        BlockIDFlag: typeof _112.BlockIDFlag;
        BlockIDFlagSDKType: typeof _112.BlockIDFlag;
        BlockIDFlagAmino: typeof _112.BlockIDFlag;
        SignedMsgType: typeof _112.SignedMsgType;
        SignedMsgTypeSDKType: typeof _112.SignedMsgType;
        SignedMsgTypeAmino: typeof _112.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _112.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.PartSetHeader;
            fromPartial(object: Partial<_112.PartSetHeader>): _112.PartSetHeader;
            fromAmino(object: _112.PartSetHeaderAmino): _112.PartSetHeader;
            toAmino(message: _112.PartSetHeader): _112.PartSetHeaderAmino;
            fromAminoMsg(object: _112.PartSetHeaderAminoMsg): _112.PartSetHeader;
            fromProtoMsg(message: _112.PartSetHeaderProtoMsg): _112.PartSetHeader;
            toProto(message: _112.PartSetHeader): Uint8Array;
            toProtoMsg(message: _112.PartSetHeader): _112.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _112.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Part;
            fromPartial(object: Partial<_112.Part>): _112.Part;
            fromAmino(object: _112.PartAmino): _112.Part;
            toAmino(message: _112.Part): _112.PartAmino;
            fromAminoMsg(object: _112.PartAminoMsg): _112.Part;
            fromProtoMsg(message: _112.PartProtoMsg): _112.Part;
            toProto(message: _112.Part): Uint8Array;
            toProtoMsg(message: _112.Part): _112.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _112.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.BlockID;
            fromPartial(object: Partial<_112.BlockID>): _112.BlockID;
            fromAmino(object: _112.BlockIDAmino): _112.BlockID;
            toAmino(message: _112.BlockID): _112.BlockIDAmino;
            fromAminoMsg(object: _112.BlockIDAminoMsg): _112.BlockID;
            fromProtoMsg(message: _112.BlockIDProtoMsg): _112.BlockID;
            toProto(message: _112.BlockID): Uint8Array;
            toProtoMsg(message: _112.BlockID): _112.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _112.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Header;
            fromPartial(object: Partial<_112.Header>): _112.Header;
            fromAmino(object: _112.HeaderAmino): _112.Header;
            toAmino(message: _112.Header): _112.HeaderAmino;
            fromAminoMsg(object: _112.HeaderAminoMsg): _112.Header;
            fromProtoMsg(message: _112.HeaderProtoMsg): _112.Header;
            toProto(message: _112.Header): Uint8Array;
            toProtoMsg(message: _112.Header): _112.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _112.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Data;
            fromPartial(object: Partial<_112.Data>): _112.Data;
            fromAmino(object: _112.DataAmino): _112.Data;
            toAmino(message: _112.Data): _112.DataAmino;
            fromAminoMsg(object: _112.DataAminoMsg): _112.Data;
            fromProtoMsg(message: _112.DataProtoMsg): _112.Data;
            toProto(message: _112.Data): Uint8Array;
            toProtoMsg(message: _112.Data): _112.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _112.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Vote;
            fromPartial(object: Partial<_112.Vote>): _112.Vote;
            fromAmino(object: _112.VoteAmino): _112.Vote;
            toAmino(message: _112.Vote): _112.VoteAmino;
            fromAminoMsg(object: _112.VoteAminoMsg): _112.Vote;
            fromProtoMsg(message: _112.VoteProtoMsg): _112.Vote;
            toProto(message: _112.Vote): Uint8Array;
            toProtoMsg(message: _112.Vote): _112.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _112.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Commit;
            fromPartial(object: Partial<_112.Commit>): _112.Commit;
            fromAmino(object: _112.CommitAmino): _112.Commit;
            toAmino(message: _112.Commit): _112.CommitAmino;
            fromAminoMsg(object: _112.CommitAminoMsg): _112.Commit;
            fromProtoMsg(message: _112.CommitProtoMsg): _112.Commit;
            toProto(message: _112.Commit): Uint8Array;
            toProtoMsg(message: _112.Commit): _112.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _112.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.CommitSig;
            fromPartial(object: Partial<_112.CommitSig>): _112.CommitSig;
            fromAmino(object: _112.CommitSigAmino): _112.CommitSig;
            toAmino(message: _112.CommitSig): _112.CommitSigAmino;
            fromAminoMsg(object: _112.CommitSigAminoMsg): _112.CommitSig;
            fromProtoMsg(message: _112.CommitSigProtoMsg): _112.CommitSig;
            toProto(message: _112.CommitSig): Uint8Array;
            toProtoMsg(message: _112.CommitSig): _112.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _112.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Proposal;
            fromPartial(object: Partial<_112.Proposal>): _112.Proposal;
            fromAmino(object: _112.ProposalAmino): _112.Proposal;
            toAmino(message: _112.Proposal): _112.ProposalAmino;
            fromAminoMsg(object: _112.ProposalAminoMsg): _112.Proposal;
            fromProtoMsg(message: _112.ProposalProtoMsg): _112.Proposal;
            toProto(message: _112.Proposal): Uint8Array;
            toProtoMsg(message: _112.Proposal): _112.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _112.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.SignedHeader;
            fromPartial(object: Partial<_112.SignedHeader>): _112.SignedHeader;
            fromAmino(object: _112.SignedHeaderAmino): _112.SignedHeader;
            toAmino(message: _112.SignedHeader): _112.SignedHeaderAmino;
            fromAminoMsg(object: _112.SignedHeaderAminoMsg): _112.SignedHeader;
            fromProtoMsg(message: _112.SignedHeaderProtoMsg): _112.SignedHeader;
            toProto(message: _112.SignedHeader): Uint8Array;
            toProtoMsg(message: _112.SignedHeader): _112.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _112.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.LightBlock;
            fromPartial(object: Partial<_112.LightBlock>): _112.LightBlock;
            fromAmino(object: _112.LightBlockAmino): _112.LightBlock;
            toAmino(message: _112.LightBlock): _112.LightBlockAmino;
            fromAminoMsg(object: _112.LightBlockAminoMsg): _112.LightBlock;
            fromProtoMsg(message: _112.LightBlockProtoMsg): _112.LightBlock;
            toProto(message: _112.LightBlock): Uint8Array;
            toProtoMsg(message: _112.LightBlock): _112.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _112.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.BlockMeta;
            fromPartial(object: Partial<_112.BlockMeta>): _112.BlockMeta;
            fromAmino(object: _112.BlockMetaAmino): _112.BlockMeta;
            toAmino(message: _112.BlockMeta): _112.BlockMetaAmino;
            fromAminoMsg(object: _112.BlockMetaAminoMsg): _112.BlockMeta;
            fromProtoMsg(message: _112.BlockMetaProtoMsg): _112.BlockMeta;
            toProto(message: _112.BlockMeta): Uint8Array;
            toProtoMsg(message: _112.BlockMeta): _112.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _112.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.TxProof;
            fromPartial(object: Partial<_112.TxProof>): _112.TxProof;
            fromAmino(object: _112.TxProofAmino): _112.TxProof;
            toAmino(message: _112.TxProof): _112.TxProofAmino;
            fromAminoMsg(object: _112.TxProofAminoMsg): _112.TxProof;
            fromProtoMsg(message: _112.TxProofProtoMsg): _112.TxProof;
            toProto(message: _112.TxProof): Uint8Array;
            toProtoMsg(message: _112.TxProof): _112.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _111.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ConsensusParams;
            fromPartial(object: Partial<_111.ConsensusParams>): _111.ConsensusParams;
            fromAmino(object: _111.ConsensusParamsAmino): _111.ConsensusParams;
            toAmino(message: _111.ConsensusParams): _111.ConsensusParamsAmino;
            fromAminoMsg(object: _111.ConsensusParamsAminoMsg): _111.ConsensusParams;
            fromProtoMsg(message: _111.ConsensusParamsProtoMsg): _111.ConsensusParams;
            toProto(message: _111.ConsensusParams): Uint8Array;
            toProtoMsg(message: _111.ConsensusParams): _111.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _111.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.BlockParams;
            fromPartial(object: Partial<_111.BlockParams>): _111.BlockParams;
            fromAmino(object: _111.BlockParamsAmino): _111.BlockParams;
            toAmino(message: _111.BlockParams): _111.BlockParamsAmino;
            fromAminoMsg(object: _111.BlockParamsAminoMsg): _111.BlockParams;
            fromProtoMsg(message: _111.BlockParamsProtoMsg): _111.BlockParams;
            toProto(message: _111.BlockParams): Uint8Array;
            toProtoMsg(message: _111.BlockParams): _111.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _111.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.EvidenceParams;
            fromPartial(object: Partial<_111.EvidenceParams>): _111.EvidenceParams;
            fromAmino(object: _111.EvidenceParamsAmino): _111.EvidenceParams;
            toAmino(message: _111.EvidenceParams): _111.EvidenceParamsAmino;
            fromAminoMsg(object: _111.EvidenceParamsAminoMsg): _111.EvidenceParams;
            fromProtoMsg(message: _111.EvidenceParamsProtoMsg): _111.EvidenceParams;
            toProto(message: _111.EvidenceParams): Uint8Array;
            toProtoMsg(message: _111.EvidenceParams): _111.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _111.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ValidatorParams;
            fromPartial(object: Partial<_111.ValidatorParams>): _111.ValidatorParams;
            fromAmino(object: _111.ValidatorParamsAmino): _111.ValidatorParams;
            toAmino(message: _111.ValidatorParams): _111.ValidatorParamsAmino;
            fromAminoMsg(object: _111.ValidatorParamsAminoMsg): _111.ValidatorParams;
            fromProtoMsg(message: _111.ValidatorParamsProtoMsg): _111.ValidatorParams;
            toProto(message: _111.ValidatorParams): Uint8Array;
            toProtoMsg(message: _111.ValidatorParams): _111.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _111.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.VersionParams;
            fromPartial(object: Partial<_111.VersionParams>): _111.VersionParams;
            fromAmino(object: _111.VersionParamsAmino): _111.VersionParams;
            toAmino(message: _111.VersionParams): _111.VersionParamsAmino;
            fromAminoMsg(object: _111.VersionParamsAminoMsg): _111.VersionParams;
            fromProtoMsg(message: _111.VersionParamsProtoMsg): _111.VersionParams;
            toProto(message: _111.VersionParams): Uint8Array;
            toProtoMsg(message: _111.VersionParams): _111.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _111.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.HashedParams;
            fromPartial(object: Partial<_111.HashedParams>): _111.HashedParams;
            fromAmino(object: _111.HashedParamsAmino): _111.HashedParams;
            toAmino(message: _111.HashedParams): _111.HashedParamsAmino;
            fromAminoMsg(object: _111.HashedParamsAminoMsg): _111.HashedParams;
            fromProtoMsg(message: _111.HashedParamsProtoMsg): _111.HashedParams;
            toProto(message: _111.HashedParams): Uint8Array;
            toProtoMsg(message: _111.HashedParams): _111.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _110.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.Evidence;
            fromPartial(object: Partial<_110.Evidence>): _110.Evidence;
            fromAmino(object: _110.EvidenceAmino): _110.Evidence;
            toAmino(message: _110.Evidence): _110.EvidenceAmino;
            fromAminoMsg(object: _110.EvidenceAminoMsg): _110.Evidence;
            fromProtoMsg(message: _110.EvidenceProtoMsg): _110.Evidence;
            toProto(message: _110.Evidence): Uint8Array;
            toProtoMsg(message: _110.Evidence): _110.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _110.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.DuplicateVoteEvidence;
            fromPartial(object: Partial<_110.DuplicateVoteEvidence>): _110.DuplicateVoteEvidence;
            fromAmino(object: _110.DuplicateVoteEvidenceAmino): _110.DuplicateVoteEvidence;
            toAmino(message: _110.DuplicateVoteEvidence): _110.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _110.DuplicateVoteEvidenceAminoMsg): _110.DuplicateVoteEvidence;
            fromProtoMsg(message: _110.DuplicateVoteEvidenceProtoMsg): _110.DuplicateVoteEvidence;
            toProto(message: _110.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _110.DuplicateVoteEvidence): _110.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _110.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.LightClientAttackEvidence;
            fromPartial(object: Partial<_110.LightClientAttackEvidence>): _110.LightClientAttackEvidence;
            fromAmino(object: _110.LightClientAttackEvidenceAmino): _110.LightClientAttackEvidence;
            toAmino(message: _110.LightClientAttackEvidence): _110.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _110.LightClientAttackEvidenceAminoMsg): _110.LightClientAttackEvidence;
            fromProtoMsg(message: _110.LightClientAttackEvidenceProtoMsg): _110.LightClientAttackEvidence;
            toProto(message: _110.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _110.LightClientAttackEvidence): _110.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _110.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.EvidenceList;
            fromPartial(object: Partial<_110.EvidenceList>): _110.EvidenceList;
            fromAmino(object: _110.EvidenceListAmino): _110.EvidenceList;
            toAmino(message: _110.EvidenceList): _110.EvidenceListAmino;
            fromAminoMsg(object: _110.EvidenceListAminoMsg): _110.EvidenceList;
            fromProtoMsg(message: _110.EvidenceListProtoMsg): _110.EvidenceList;
            toProto(message: _110.EvidenceList): Uint8Array;
            toProtoMsg(message: _110.EvidenceList): _110.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _109.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.Block;
            fromPartial(object: Partial<_109.Block>): _109.Block;
            fromAmino(object: _109.BlockAmino): _109.Block;
            toAmino(message: _109.Block): _109.BlockAmino;
            fromAminoMsg(object: _109.BlockAminoMsg): _109.Block;
            fromProtoMsg(message: _109.BlockProtoMsg): _109.Block;
            toProto(message: _109.Block): Uint8Array;
            toProtoMsg(message: _109.Block): _109.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _114.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _114.App;
            fromPartial(object: Partial<_114.App>): _114.App;
            fromAmino(object: _114.AppAmino): _114.App;
            toAmino(message: _114.App): _114.AppAmino;
            fromAminoMsg(object: _114.AppAminoMsg): _114.App;
            fromProtoMsg(message: _114.AppProtoMsg): _114.App;
            toProto(message: _114.App): Uint8Array;
            toProtoMsg(message: _114.App): _114.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _114.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _114.Consensus;
            fromPartial(object: Partial<_114.Consensus>): _114.Consensus;
            fromAmino(object: _114.ConsensusAmino): _114.Consensus;
            toAmino(message: _114.Consensus): _114.ConsensusAmino;
            fromAminoMsg(object: _114.ConsensusAminoMsg): _114.Consensus;
            fromProtoMsg(message: _114.ConsensusProtoMsg): _114.Consensus;
            toProto(message: _114.Consensus): Uint8Array;
            toProtoMsg(message: _114.Consensus): _114.ConsensusProtoMsg;
        };
    };
}
